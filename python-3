1）运算
+
-
*
/  python2: 整除 python3: 自然除 结果为float
// 取整除 结果是整型
** 次方
%  前/后的余数

python2实现python3的自然除？
3 / 2
float(3) / 2

什么场景下用自然除，取整除？
结果要求正确: 自然除
结果要求向下整除: 取整除

2）比较运算符
==
!=
<
>=
>
<=
返回值都是bool类型
>>> 3 > 5
False
>>> 5 > 3
True
>>> 5 != 3
True
>>> 3 == 3
True

3）逻辑运算符
and
or 
not

逻辑运算符的操作数是bool类型或者可以隐式转化成bool类型
逻辑运算的返回值是bool类型
python里面没有(&& || !)

>>> True and False
False
>>> True or False
True
>>> not True
False

3.1 短路操作
>>> def true():
...     print('true')
...     return True
... 
>>> def false():
...     print('false')
...     return False
... 
##or操作，所以前面是真，后面不会执行。
>>> true() or false()
true
True
##and操作, 前面假，后面不会执行。
>>> false() and true()
false
False

比较运算和逻辑运算
>>> 3 > 2 and 3 < 2
False
>>> 3 > 2 or 3 < 2
True
>>> not 3 > 2 
False

隐式转换：
0 -- False
1 -- True
None -- False
空为False


3）成员运算符
和集合类型相关

4）身份运算符
面向对象时讲

5）位运算符(os包才会用，一般不用）
<< 按位左移
>> 按位右移
&  
|
^ 
直接操作二进制，比较难(c, 汇编才可能用)

5）运算符的优先级

* / 比 + - 高
3 + 1 * 4

** 比 * /高
3 * 4 ** 2

* / 比 % 高
3 * 4 % 2

% 比 + - 高
3 - 4 % 2

算术 > 比较 > 逻辑高 (可以通过括号改变)
3 > 5 and 5 > 3
3  + 5 > 7

不确定或表达式复杂时，使用括号来决定优先级。


