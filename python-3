第一天
1）运算
+
-
*
/  python2: 整除 python3: 自然除 结果为float
// 取整除 结果是整型
** 次方
%  前/后的余数

python2实现python3的自然除？
3 / 2
float(3) / 2

什么场景下用自然除，取整除？
结果要求正确: 自然除
结果要求向下整除: 取整除

2）比较运算符
==
!=
<
>=
>
<=
返回值都是bool类型
>>> 3 > 5
False
>>> 5 > 3
True
>>> 5 != 3
True
>>> 3 == 3
True

3）逻辑运算符
and
or 
not

逻辑运算符的操作数是bool类型或者可以隐式转化成bool类型
逻辑运算的返回值是bool类型
python里面没有(&& || !)

>>> True and False
False
>>> True or False
True
>>> not True
False

3.1 短路操作
>>> def true():
...     print('true')
...     return True
... 
>>> def false():
...     print('false')
...     return False
... 
##or操作，所以前面是真，后面不会执行。
>>> true() or false()
true
True
##and操作, 前面假，后面不会执行。
>>> false() and true()
false
False

比较运算和逻辑运算
>>> 3 > 2 and 3 < 2
False
>>> 3 > 2 or 3 < 2
True
>>> not 3 > 2 
False

隐式转换：
0 -- False
1 -- True
None -- False
空为False
字串不空为True



3）成员运算符
和集合类型相关

4）身份运算符
面向对象时讲

5）位运算符(os包才会用，一般不用）
<< 按位左移
>> 按位右移
&  
|
^ 
直接操作二进制，比较难(c, 汇编才可能用)

6）运算符的优先级

* / 比 + - 高
3 + 1 * 4

** 比 * /高
3 * 4 ** 2

* / 比 % 高
3 * 4 % 2

% 比 + - 高
3 - 4 % 2

算术 > 比较 > 逻辑高 (可以通过括号改变)
3 > 5 and 5 > 3
3  + 5 > 7

不确定或表达式复杂时，使用括号来决定优先级。

7）赋值运算
var = value
将值存储在变量指向内存空间中

可以与其它运算符一起使用 
自增
i = i + 1
i += 1
i ++

自减
i = i - 1
i -= 1
i --

...


8）表达式。运算符组成
9）语句：关键字和表达式组成

编程模型
顺序
选择
循环


1）顺序执行
i = 3
print(i)
i = i + 5
print(i)

2）选择执行
单分支
if condition:
	if-ture

eg:
a = 5
if a < 10:
	print('a less than 10')
print(a) #没有缩进表示，已经不在if语句内。


双分支
if condition:
	if-true
else:
	if-false

eg:
a = 5
if a < 10:
	print('a less than 10')
else:
	print('a more than 10')
print(a)

多分支
if condition:
	if-true
elif condition:
	if-true
...
else:
	all-false

1）只会执行一个分支, 即退出。
2）所有分支均错误时，才会执行最后一个分支。

eg:
a = 50
if a < 10:
	print('a less than 10')
elif a < 20:
	print('10 <= a < 20')
else:
	print('a more than 20')
print(a)

3）循环
1、while: 对未知的循环。
	while condition:
		loop-body
	
	条件为真，进入循环，循环后再判断。
	条件为假，不进入循环。

eg:
i = 0
while i < 10:
    print(i)
    i = i + 1

2、for: 对已知的循环。
	for i in 可迭代对象:
		loop-body

	遍历列表中的元素，直至其枯竭

	for in 循环中永远不要修改迭代对象。

可迭代对象
	next
	range: python2是列表，Python3是对象
	
r = range(0,10)
it = iter(r)
next(it)

eg:
for i in range(0,10):
	print(i)


3、break 提前终止循环
for i in range(0, 10):
    print(i)
    if i % 2 == 1:
        print('find it')
        break

4、continue 跳过本轮循环
打印所有的偶数
for i in range(0, 10):
    if i % 2 == 1:
        continue
    else:
        print(i)

continue 是跳过后面的，即本轮循环体后的语句
for i in range(0, 10):
    print(i)
    if i % 2 == 1:
        continue
    print('i is {}, i+1 is {}'.format(i, i+1))

5、else子句，跟循环语句配合
循环没有提前退出时，所有元素遍历后会执行else子句。	
for i in range(0, 10):
    pass
else:
    print('ok')
结果是 ok

for i in range(0, 10):
    break
else:
    print('ok')
结果没有ok

for i in range(0, 10):
    continue
else:
    print('ok')
结果有ok

pass: 对语句块的点位，不需要点位。其它语言用空的花括号。

作业：求100万以内的所有素数(质数)？ 

退出python脚本
--------------------------
import sys
sys.exit()
--------------------------
